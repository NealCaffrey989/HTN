(defdomain Transport
 (
 ;;-----------------------------operator---------------------------------------- 
  (:operator (!carry ?st ?et ?loc ?truck ?re ?amount)
     ((TimeScope ?st1 ?et1)(Loc-At ?truck ?loc)
      (Loc-Stock ?loc ?re ?n)(call >= ?n ?amount)
      (TruckAbility ?truck ?re ?ab ?c)(call >= ?ab ?amount)
      (EndTime ?truck ?t1))
     ((TimeScope ?st1 ?et1)(TruckAbility ?truck ?re ?ab ?c)(Loc-Stock ?loc ?re ?n)
      (EndTime ?truck ?t1))
     ((TimeScope ?st ?et)(Loc-Stock ?loc ?re (call - ?n ?amount))
      (TruckAbility ?truck ?re (call - ?ab ?amount) (call + ?c ?amount))
      (EndTime ?truck ?et))
   )
  
  (:operator (!move ?st ?et ?truck ?loc-from ?loc-to)
     ((TimeScope ?st1 ?et1)(Loc-At ?truck ?loc-from)
      (EndTime ?truck ?t1))
     ((TimeScope ?st1 ?et1)(Loc-At ?truck ?loc-from)
      (EndTime ?truck ?t1))
      
     ((TimeScope ?st ?et)(Loc-At ?truck ?loc-to)
      (EndTime ?truck ?et))
   ) 
   
  (:operator (!unload ?st ?et ?loc ?truck ?re ?amount)
     ((TimeScope ?st1 ?et1)(Loc-At ?truck ?loc)
      (Loc-Have ?loc ?re ?n)(EndTime ?truck ?t1)
      (TruckAbility ?truck ?re ?ab ?c))
     ((TimeScope ?st1 ?et1)(TruckAbility ?truck ?re ?ab ?c)(Loc-Have ?loc ?re ?n)
      (EndTime ?truck ?t1))
     ((TimeScope ?st ?et)(Loc-Have ?loc ?re (call + ?n ?amount))
      (TruckAbility ?truck ?re (call + ?ab ?amount) (call - ?c ?amount))
      (EndTime ?truck ?et))
   )
   
  ;;------Í¨ÓÃ²Ù×÷------
  (:operator(!!return-back)
  ()
  ()
  ()
  )
 ;;-----------------------------method------------------------------------------
 (:method(Transport ?loc-to ?et ?re ?amount)
  (:sort-by ?st <(
   (Loc-Stock ?loc-from ?re ?n1)(call > ?n1 0)
   (loc-At ?truck ?loc-from)(call > ?amount 0)
   (TruckAbility ?truck ?re ?ab ?c)(EndTime ?truck ?st)
   (SpentTime ?truck ?loc-from ?loc-to ?t)
   (call >= (call - ?et ?st) (call + ?t 2))   
   (assign ?n (call min ?n1 ?amount ?ab))))
   (
    (!carry ?st (call + ?st 1) ?loc-from ?truck ?re ?n)
    (!move (call + ?st 1) (call + ?st 1 ?t) ?truck ?loc-from ?loc-to)
    (!unload (call + ?st 1 ?t) (call + ?st 2 ?t) ?loc-to ?truck ?re ?n) 
    (Transport ?loc-to ?et ?re (call - ?amount ?n))
    ;;(!!return-back)
   )
  (:sort-by ?st <(
   (Loc-Stock ?loc-from ?re ?n1)(call > ?n1 0)
   (loc-At ?truck ?loc-to1)(call > ?amount 0)(not(Loc-Stock ?loc-to1 ?re ?n))
   (SpentTime ?truck ?loc-from ?loc-to ?t)(SpentTime ?truck ?loc-to1 ?loc-from ?t1)
   (EndTime ?truck ?st)
   (call >= (call - ?et ?st) (call + 2 ?t1 ?t)))
   )
  ((!move ?st (call + ?st ?t1) ?truck ?loc-to1 ?loc-from)
    (Transport ?loc-to ?et ?re ?amount)
    )
  ()
  ((!!return-back))
 )
 )
)